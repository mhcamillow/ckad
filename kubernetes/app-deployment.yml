apiVersion: apps/v1
kind: Deployment
metadata:
  name: node-deployment
  labels:
    app: nodeapp
spec:
  selector:
    matchLabels:
      app: nodeapp
  template:
    metadata:
      labels:
        app: nodeapp
    spec:
      containers:
      - name: nodeapp
        image: docker.io/mhcamillow/node
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
      imagePullSecrets:
        - name: regcred
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-deployment
  labels:
    app: redis
spec:
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:latest
        ports:
        - containerPort: 6379
        resources:
          limits:
            cpu: 500m
          requests:
            cpu: 200m
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-insight-deployment
  labels:
    app: redis-insight
spec:
  selector:
    matchLabels:
      app: redis-insight
  template:
    metadata:
      labels:
        app: redis-insight
    spec:
      containers:
      - name: redis-insight
        image: redislabs/redisinsight:latest
        ports:
        - containerPort: 8001
      #   volumeMounts:
      #   - name: db #Pod volumes to mount into the container's filesystem. Cannot be updated.
      #     mountPath: /db
      # volumes:
      # - name: db
      #   emptyDir: {} # node-ephemeral volume https://kubernetes.io/docs/concepts/storage/volumes/#emptydir
---
apiVersion: v1
kind: Service
metadata:
  name: nodeapp-nodeport
spec:
  type: NodePort
  selector:
    app: nodeapp
  ports:
    - port: 8080
      targetPort: 8080
---
apiVersion: v1
kind: Service
metadata:
  name: redis-nodeport
spec:
  type: NodePort
  selector:
    app: redis
  ports:
    - port: 6379
      targetPort: 6379
---
apiVersion: v1
kind: Service
metadata:
  name: redis-insight-lb
spec:
  type: LoadBalancer
  selector:
    app: redis-insight
  ports:
    - port: 8001
      targetPort: 8001
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: node-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /$1
spec:
  defaultBackend:
    service:
      name: nodeapp-nodeport
      port:
        number: 8080
  rules:
    - host: nodeapp.example
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: nodeapp-nodeport
                port:
                  number: 8080
# ---
# apiVersion: autoscaling/v1
# kind: HorizontalPodAutoscaler
# metadata:
#   name: node-deployment-hpa
#   namespace: default
# spec:
#   maxReplicas: 10
#   minReplicas: 1
#   scaleTargetRef:
#     apiVersion: apps/v1
#     kind: Deployment
#     name: node-deployment
#   targetCPUUtilizationPercentage: 50